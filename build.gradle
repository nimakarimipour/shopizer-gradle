plugins {
    id 'java'
    id 'com.github.sherter.google-java-format' version '0.9'
    id 'org.checkerframework' version '0.6.26'
    id 'net.ltgt.errorprone' version "2.0.1"
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    elasticsearchVersion = '7.5.2'
    guavaVersion = '27.1-jre'
    commonsLangVersion = '3.5'
    commonsIoVersion = '2.7'
    commonsCollections4Version = '4.1'
    commonsValidatorVersion = '1.5.1'
    commonsFileUploadVersion = '1.3.3'
    mapstructVersion = '1.3.0.Final'
    apacheHttpComponentVersion = '4.5.2'
    javaxInjectVersion = '1'
    javaxElVersion = '2.2.4'
    javaxServletApiVersion = '3.0.1'
    javaxAnnotationVersion = '1.3.2'
    infinispanVersion = '9.4.18.Final'
    infinispanTreeVersion = '9.4.18.Final'
    mysqlJdbcVersion = '8.0.21'
    oracleVersion = '18.3.0.0'
    postgresqlVersion = '42.2.18'
    simpleJsonVersion = '1.1.1'
    jacksonDatabindVersion = '2.13.4.1'
    jacksonVersion = '2.13.4'
    geoip2Version = '2.7.0'
    droolsVersion = '7.32.0.Final'
    googleClientMapsServicesVersion = '0.1.6'
    jwtVersion = '0.8.0'
    swaggerVersion = '2.9.2'
    coverageLines = '.30'
    coverageBranches = '.37'
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.12'
    implementation "org.springframework.boot:spring-boot-starter-cache:2.7.12"
    implementation "javax.inject:javax.inject:${javaxInjectVersion}"
    implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "io.jsonwebtoken:jjwt:${jwtVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonDatabindVersion}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    implementation "javax.mail:mail:1.4.7"
    implementation "com.googlecode.json-simple:json-simple:${simpleJsonVersion}"
    implementation "mysql:mysql-connector-java:${mysqlJdbcVersion}"
    implementation "com.google.maps:google-maps-services:${googleClientMapsServicesVersion}"
    implementation "org.kie:kie-ci:${droolsVersion}"
    implementation "org.drools:drools-decisiontables:${droolsVersion}"
    implementation "org.drools:drools-core:${droolsVersion}"
    implementation "org.drools:drools-compiler:${droolsVersion}"
    implementation "org.kie:kie-spring:${droolsVersion}"
    implementation "org.infinispan:infinispan-core:${infinispanVersion}"
    implementation "org.infinispan:infinispan-cachestore-jdbc:${infinispanTreeVersion}"
    implementation "org.infinispan:infinispan-tree:${infinispanVersion}"
    implementation "org.apache.commons:commons-collections4:${commonsCollections4Version}"
    implementation "commons-validator:commons-validator:${commonsValidatorVersion}"
    implementation "com.amazonaws:aws-java-sdk-s3:1.11.640"
    implementation "com.amazonaws:aws-java-sdk-ses:1.11.640"
    implementation "com.google.cloud:google-cloud-storage:1.74.0"
    implementation "com.paypal.sdk:merchantsdk:2.6.109"
    implementation "com.stripe:stripe-java:19.5.0"
    implementation "com.braintreepayments.gateway:braintree-java:2.73.0"
    implementation "com.maxmind.geoip2:geoip2:${geoip2Version}"
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "commons-io:commons-io:${commonsIoVersion}"
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation "commons-fileupload:commons-fileupload:${commonsFileUploadVersion}"
    implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"
    implementation "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}"
    implementation "javax.inject:javax.inject:*"
    implementation "javax.validation:validation-api:2.0.1.Final"
    implementation "org.apache.commons:commons-lang3:*"
    implementation "com.fasterxml.jackson.core:jackson-databind:*"
    implementation "com.fasterxml.jackson.core:jackson-core:*"
    implementation "com.fasterxml.jackson.core:jackson-annotations:*"
    implementation "net.sf.ehcache:ehcache:2.10.9.2"
    implementation "javax.mail:javax.mail-api:1.6.2"
    implementation "javax.mail:mail:*"
    implementation "com.googlecode.json-simple:json-simple:*"
    implementation "mysql:mysql-connector-java:*"
    implementation "com.shopizer:shopizer-commons:1.0.6"
    implementation "com.shopizer:sm-core-model:3.2.5"
    implementation "com.shopizer:sm-core-modules:3.2.5"
    implementation "org.freemarker:freemarker:2.3.31"

    // UCR Tainting checker
    annotationProcessor "edu.ucr.cs.riple.taint:ucrtainting-checker:0.1"
    compileOnly "edu.ucr.cs.riple.taint:ucrtainting-checker-qual:0.1"

    // Annotator Scanner Checker
    annotationProcessor "edu.ucr.cs.riple.annotator:annotator-scanner:1.3.7-SNAPSHOT"
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
    errorprone "com.google.errorprone:error_prone_core:2.3.2"
    errorproneJavac "com.google.errorprone:javac:9+181-r4173-1"
}

test {
    useJUnitPlatform()
}

checkerFramework {
    checkers = [
            'edu.ucr.cs.riple.taint.ucrtainting.UCRTaintingChecker',
    ]

    extraJavacArgs = [
            '-AannotatedPackages=' + 'org',
            '-AenableCustomCheck=true'
    ]
}

import net.ltgt.gradle.errorprone.CheckSeverity
tasks.withType(JavaCompile) {
    // remove the if condition if you want to run NullAway on test code
    if (!name.toLowerCase().contains("test")) {
        options.errorprone.disableAllChecks = true
        options.errorprone.disableAllWarnings = true
        options.errorprone {
            check("AnnotatorScanner", CheckSeverity.ERROR)
            option("AnnotatorScanner:ConfigPath", "/tmp/ucr-tainting/scanner.xml")
        }
    }
    options.compilerArgs << "-Xmaxerrs" << "100000"
    options.compilerArgs << "-Xmaxwarns" << "100000"
}
